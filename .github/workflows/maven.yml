name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn clean package --file pom.xml

    - name: Create artifacts directory if not exists
      run: echo {{test.mykey}}

    - name: Move artifacts to the artifacts directory
      run: |
        if [ -f target/*.jar ]; then
          mv target/*.jar artifacts/
        else
          echo "No JAR files found"
        fi

    name: CI

name: Java CI with Maven

on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # Build with Maven
      - name: Build with Maven
        run: mvn clean package --file pom.xml

      # Create artifacts directory if it doesn't exist
      - name: Create artifacts directory if not exists
        run: |
          mkdir -p artifacts

      # Move artifacts to the artifacts directory
      - name: Move artifacts to the artifacts directory
        run: |
          if [ -f target/*.jar ]; then
            mv target/*.jar artifacts/
          else
            echo "No JAR files found"
          fi

  docker_build_and_push:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout code again in the second job
      - name: Checkout code
        uses: actions/checkout@v4

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ daniel3456 }}  # Use GitHub Secrets for sensitive info
          password: ${{ Daniel123456789@ }}  # Use GitHub Secrets for sensitive info

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ daniel3456 }}/yourimage:latest .

      # Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ daniel3456 }}/yourimage:latest
